Scenarios:

Tourguide / Cityguide app:

The Client would like an app that provides information about a particular city 
or location. The Consumers are people or groups that are not locals of that 
city or location. The app should provide up to date current information, for
instance Theater schedules, public transportation schedules are prices, Concert
schedules, current museum or gallery exhibitions. But the app should not incure 
( cause ) high data roaming costs. All the information should be viewable offline
after a one time download. 

The Client requires a web interface that enables updating data as well 
modifiying and extending the navigation structure of the app. 


Magazine app:

The Client is a magazine or newspaper publisher and would like to publish its
content in electronic form. In order to ensure an excellent reading experience
the client would like the app to download complete issues locally for offline
reading. 

The Client requires a web interface that enables publishing of issues as well
as updating older issues. 


Challenges: 

In the cases above both apps need to deal with alot of data, both as database 
data and media assets ( images, audio and video ). An on-demand style data 
download system that downloads only the data the consumer currently needs can
have a high cost, financially if the consumer is on a roaming mobile network, or
as an interruption in the experience of browsing the content.

In both cases the Client must be able to keep the content up to date for the app
to be informative and interesting. In the worst case, the Client might need to
update a small piece of data ( a small correction ) that would require the 
Consumer to re-download all of the data. Ideally only the delta could be sent
and the app would update it's data internally. Using an svn or git style version
managment system in the app to handle updates would ensure that the content
in the app mirrors what is published on the server, and that content transfer
is effecient. This works ideally for text based information. If data is stored 
on the server and in the app in the form of a binary database file ( sqlite for 
example ) then content updating will be more challenging. 